                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module StateStart
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _PrintText
                             12 	.globl _Printf
                             13 	.globl _InitScrollColor
                             14 	.globl _ZInitScrollTilesColor
                             15 	.globl _PlayMusic
                             16 	.globl _SetState
                             17 	.globl _level
                             18 	.globl _lifes
                             19 	.globl _bank_STATE_START
                             20 	.globl _Start_STATE_START
                             21 	.globl _Update_STATE_START
                             22 ;--------------------------------------------------------
                             23 ; ram data
                             24 ;--------------------------------------------------------
                             25 	.area _DATA
   0000                      26 _bank_STATE_START::
   0000                      27 	.ds 1
   0001                      28 _lifes::
   0001                      29 	.ds 1
   0002                      30 _level::
   0002                      31 	.ds 1
                             32 ;--------------------------------------------------------
                             33 ; absolute external ram data
                             34 ;--------------------------------------------------------
                             35 	.area _DABS (ABS)
                             36 ;--------------------------------------------------------
                             37 ; global & static initialisations
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _GSINIT
                             41 	.area _GSFINAL
                             42 	.area _GSINIT
                             43 ;StateStart.c:3: UINT8 bank_STATE_START = 2;
   0000 21r00r00             44 	ld	hl,#_bank_STATE_START
   0003 36 02                45 	ld	(hl),#0x02
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 	.area _HOME
                             51 ;--------------------------------------------------------
                             52 ; code
                             53 ;--------------------------------------------------------
                             54 	.area _CODE_2
                             55 ;StateStart.c:19: void PrintText() {
                             56 ;	---------------------------------
                             57 ; Function PrintText
                             58 ; ---------------------------------
   0000                      59 _PrintText::
                             60 ;StateStart.c:20: PRINT_POS(4, 13);
   0000 21r00r00             61 	ld	hl,#_print_x
   0003 36 04                62 	ld	(hl),#0x04
   0005 21r00r00             63 	ld	hl,#_print_y
   0008 36 0D                64 	ld	(hl),#0x0d
                             65 ;StateStart.c:21: Printf("PRESS START!");
   000A 21r27r00             66 	ld	hl,#___str_0
   000D E5                   67 	push	hl
   000E CDr00r00             68 	call	_Printf
   0011 E8 02                69 	add	sp, #2
                             70 ;StateStart.c:22: PRINT_POS(2, 15);
   0013 21r00r00             71 	ld	hl,#_print_x
   0016 36 02                72 	ld	(hl),#0x02
   0018 21r00r00             73 	ld	hl,#_print_y
   001B 36 0F                74 	ld	(hl),#0x0f
                             75 ;StateStart.c:23: Printf("SERGEEO ZGBJAM18");
   001D 21r34r00             76 	ld	hl,#___str_1
   0020 E5                   77 	push	hl
   0021 CDr00r00             78 	call	_Printf
   0024 E8 02                79 	add	sp, #2
   0026 C9                   80 	ret
   0027                      81 ___str_0:
   0027 50 52 45 53 53 20    82 	.ascii "PRESS START!"
        53 54 41 52 54 21
   0033 00                   83 	.db 0x00
   0034                      84 ___str_1:
   0034 53 45 52 47 45 45    85 	.ascii "SERGEEO ZGBJAM18"
        4F 20 5A 47 42 4A
        41 4D 31 38
   0044 00                   86 	.db 0x00
                             87 ;StateStart.c:26: void Start_STATE_START() {
                             88 ;	---------------------------------
                             89 ; Function Start_STATE_START
                             90 ; ---------------------------------
   0045                      91 _Start_STATE_START::
                             92 ;StateStart.c:27: PlayMusic(startmusic_mod_Data, 3, 1);
   0045 21 03 01             93 	ld	hl,#0x0103
   0048 E5                   94 	push	hl
   0049 21r00r00             95 	ld	hl,#_startmusic_mod_Data
   004C E5                   96 	push	hl
   004D CDr00r00             97 	call	_PlayMusic
   0050 E8 04                98 	add	sp, #4
                             99 ;StateStart.c:28: lifes = 5;
   0052 21r01r00            100 	ld	hl,#_lifes
   0055 36 05               101 	ld	(hl),#0x05
                            102 ;StateStart.c:29: level = 1;
   0057 21r02r00            103 	ld	hl,#_level
   005A 36 01               104 	ld	(hl),#0x01
                            105 ;StateStart.c:31: InitScrollTiles(0, 104, tiles, 3);
   005C 21 00 00            106 	ld	hl,#0x0000
   005F E5                  107 	push	hl
   0060 3E 03               108 	ld	a,#0x03
   0062 F5                  109 	push	af
   0063 33                  110 	inc	sp
   0064 21r00r00            111 	ld	hl,#_tiles
   0067 E5                  112 	push	hl
   0068 21 00 68            113 	ld	hl,#0x6800
   006B E5                  114 	push	hl
   006C CDr00r00            115 	call	_ZInitScrollTilesColor
   006F E8 07               116 	add	sp, #7
                            117 ;StateStart.c:32: InitScroll(pressstartWidth, pressstartHeight, pressstart, 0, 0, 3);
   0071 21 00 00            118 	ld	hl,#0x0000
   0074 E5                  119 	push	hl
   0075 3E 03               120 	ld	a,#0x03
   0077 F5                  121 	push	af
   0078 33                  122 	inc	sp
   0079 2E 00               123 	ld	l, #0x00
   007B E5                  124 	push	hl
   007C 2E 00               125 	ld	l, #0x00
   007E E5                  126 	push	hl
   007F 21r00r00            127 	ld	hl,#_pressstart
   0082 E5                  128 	push	hl
   0083 21 12 00            129 	ld	hl,#0x0012
   0086 E5                  130 	push	hl
   0087 2E 14               131 	ld	l, #0x14
   0089 E5                  132 	push	hl
   008A CDr00r00            133 	call	_InitScrollColor
   008D E8 0D               134 	add	sp, #13
                            135 ;StateStart.c:33: SHOW_BKG;
   008F 11 40 FF            136 	ld	de,#0xff40
   0092 1A                  137 	ld	a,(de)
   0093 4F                  138 	ld	c,a
   0094 06 00               139 	ld	b,#0x00
   0096 79                  140 	ld	a,c
   0097 CB C7               141 	set	0, a
   0099 4F                  142 	ld	c,a
   009A 21 40 FF            143 	ld	hl,#0xff40
   009D 71                  144 	ld	(hl),c
                            145 ;StateStart.c:35: INIT_FONT(font, 3, PRINT_BKG);	
   009E 21 00 00            146 	ld	hl,#0x0000
   00A1 E5                  147 	push	hl
   00A2 3E 03               148 	ld	a,#0x03
   00A4 F5                  149 	push	af
   00A5 33                  150 	inc	sp
   00A6 21r00r00            151 	ld	hl,#_font
   00A9 E5                  152 	push	hl
   00AA 21 D2 2D            153 	ld	hl,#0x2dd2
   00AD E5                  154 	push	hl
   00AE CDr00r00            155 	call	_ZInitScrollTilesColor
   00B1 E8 07               156 	add	sp, #7
   00B3 21r00r00            157 	ld	hl,#_font_idx
   00B6 36 D2               158 	ld	(hl),#0xd2
   00B8 21r00r00            159 	ld	hl,#_print_target
   00BB 36 00               160 	ld	(hl),#0x00
                            161 ;StateStart.c:36: PrintText();
   00BD C3r00r00            162 	jp	_PrintText
                            163 ;StateStart.c:39: void Update_STATE_START() {
                            164 ;	---------------------------------
                            165 ; Function Update_STATE_START
                            166 ; ---------------------------------
   00C0                     167 _Update_STATE_START::
                            168 ;StateStart.c:40: if (KEY_TICKED(J_START)) {
   00C0 21r00r00            169 	ld	hl,#_keys
   00C3 4E                  170 	ld	c,(hl)
   00C4 06 00               171 	ld	b,#0x00
   00C6 CB 79               172 	bit	7, c
   00C8 C8                  173 	ret	Z
   00C9 21r00r00            174 	ld	hl,#_previous_keys
   00CC 4E                  175 	ld	c,(hl)
   00CD 06 00               176 	ld	b,#0x00
   00CF CB 79               177 	bit	7, c
   00D1 C0                  178 	ret	NZ
                            179 ;StateStart.c:41: SetState(STATE_GAME);
   00D2 AF                  180 	xor	a, a
   00D3 F5                  181 	push	af
   00D4 33                  182 	inc	sp
   00D5 CDr00r00            183 	call	_SetState
   00D8 33                  184 	inc	sp
   00D9 C9                  185 	ret
                            186 	.area _CODE_2
                            187 	.area _CABS (ABS)
